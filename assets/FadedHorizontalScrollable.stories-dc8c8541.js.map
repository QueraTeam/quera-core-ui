{"version":3,"file":"FadedHorizontalScrollable.stories-dc8c8541.js","sources":["../../node_modules/@chakra-ui/button/dist/chunk-6QYXN73V.mjs","../../src/hooks/useScrollOnDrag.ts","../../src/components/FadedHorizontalScrollable.tsx"],"sourcesContent":["'use client'\nimport {\n  Button\n} from \"./chunk-UVUR7MCU.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n//# sourceMappingURL=chunk-6QYXN73V.mjs.map","// Reference: https://github.com/dotcore64/react-scroll-ondrag\n\nimport * as React from \"react\";\n\nconst maxHorizontalScroll = (dom) => dom.scrollWidth - dom.clientWidth;\nconst maxVerticalScroll = (dom) => dom.scrollHeight - dom.clientHeight;\n\n/**\n  Scroll your elements by dragging your mouse.\n\n  Related Tips:\n  - you can hide the scrollbar but keep it's functionality on your element using this:\n    https://www.w3schools.com/howto/howto_css_hide_scrollbars.asp\n\n  Usage:\n    const App = () => {\n    const { ref, onMouseDown } = useScrollOnDrag(ref);\n    return <div onMouseDown={onMouseDown} ref={ref} />;\n\n  @param options { onDragStart, onDragEnd }\n  @returns { ref, onMouseDown }\n */\nexport const useScrollOnDrag = (onDragStart = () => {}, onDragEnd = () => {}) => {\n  const ref = React.useRef<HTMLDivElement>();\n  const internalState = React.useRef({\n    lastMouseX: null,\n    lastMouseY: null,\n    isMouseDown: false,\n    isScrolling: false,\n  });\n\n  const scroll = React.useCallback(({ dx, dy, behavior = undefined }) => {\n    const offsetX = Math.min(maxHorizontalScroll(ref.current), ref.current.scrollLeft + dx);\n    const offsetY = Math.min(maxVerticalScroll(ref.current), ref.current.scrollTop + dy);\n\n    ref.current.scroll({ left: offsetX, top: offsetY, behavior });\n  }, []);\n\n  const onMouseDown = React.useCallback((e) => {\n    internalState.current.isMouseDown = true;\n    internalState.current.lastMouseX = e.clientX;\n    internalState.current.lastMouseY = e.clientY;\n  }, []);\n\n  const onMouseUp = () => {\n    internalState.current.isMouseDown = false;\n    internalState.current.lastMouseX = null;\n    internalState.current.lastMouseY = null;\n\n    if (internalState.current.isScrolling) {\n      internalState.current.isScrolling = false;\n      ref.current.style.cursor = \"grab\";\n      onDragEnd();\n    }\n  };\n\n  const onMouseMove = (e) => {\n    if (!internalState.current.isMouseDown) return;\n\n    if (!internalState.current.isScrolling) {\n      internalState.current.isScrolling = true;\n      ref.current.style.cursor = \"grabbing\";\n      onDragStart();\n    }\n\n    // diff is negative because we want to scroll in the opposite direction of the movement\n    const dx = -(e.clientX - internalState.current.lastMouseX);\n    const dy = -(e.clientY - internalState.current.lastMouseY);\n    internalState.current.lastMouseX = e.clientX;\n    internalState.current.lastMouseY = e.clientY;\n\n    scroll({ dx, dy });\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    ref,\n    onMouseDown,\n    scroll,\n  };\n};\n","import { Box, BoxProps, Flex, IconButton } from \"@chakra-ui/react\";\nimport { mdiChevronLeft, mdiChevronRight } from \"@mdi/js\";\nimport * as React from \"react\";\nimport { useScrollOnDrag } from \"../hooks/useScrollOnDrag\";\nimport { FadedHorizontalOneLine } from \"./Faded\";\nimport { MdIcon } from \"./MdIcon\";\n\nexport interface FadedHorizontalScrollableProps extends BoxProps {\n  children: React.ReactNode;\n  navigation?: boolean;\n}\n\nexport const FadedHorizontalScrollable = ({ children, navigation, ...rest }: FadedHorizontalScrollableProps) => {\n  const { ref, onMouseDown, scroll } = useScrollOnDrag();\n\n  return (\n    <Box\n      {...rest}\n      sx={{\n        \"> div::-webkit-scrollbar\": {\n          display: \"none\",\n        },\n        \"> div\": {\n          scrollbarWidth: \"none\",\n        },\n      }}\n    >\n      {navigation && (\n        <Box>\n          <IconButton\n            variant=\"unstyled\"\n            colorScheme=\"blackAlpha\"\n            color=\"black\"\n            aria-label=\"Navigate Next\"\n            icon={<MdIcon icon={mdiChevronRight} boxSize={6} />}\n            pos=\"absolute\"\n            right={0}\n            top=\"50%\"\n            transform=\"translateY(-50%)\"\n            zIndex=\"docked\"\n            onClick={() => scroll({ dx: 50, dy: 0, behavior: \"smooth\" })}\n          />\n          <IconButton\n            variant=\"unstyled\"\n            colorScheme=\"blackAlpha\"\n            color=\"black\"\n            aria-label=\"Navigate Perv\"\n            icon={<MdIcon icon={mdiChevronLeft} boxSize={6} />}\n            pos=\"absolute\"\n            left={0}\n            top=\"50%\"\n            transform=\"translateY(-50%)\"\n            zIndex=\"docked\"\n            onClick={() => scroll({ dx: -50, dy: 0, behavior: \"smooth\" })}\n          />\n        </Box>\n      )}\n      <Flex\n        as={FadedHorizontalOneLine}\n        percent={90}\n        overflowX=\"scroll\"\n        userSelect=\"none\"\n        cursor=\"grab\"\n        ref={ref}\n        onMouseDown={onMouseDown}\n      >\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n"],"names":["IconButton","forwardRef","props","ref","icon","children","isRound","ariaLabel","rest","element","_children","isValidElement","cloneElement","jsx","Button","maxHorizontalScroll","dom","maxVerticalScroll","useScrollOnDrag","onDragStart","onDragEnd","React.useRef","internalState","scroll","React.useCallback","dx","dy","behavior","offsetX","offsetY","onMouseDown","e","onMouseUp","onMouseMove","React.useEffect","FadedHorizontalScrollable","navigation","jsxs","Box","MdIcon","mdiChevronRight","mdiChevronLeft","Flex","FadedHorizontalOneLine"],"mappings":"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","x_google_ignoreList":[0]}