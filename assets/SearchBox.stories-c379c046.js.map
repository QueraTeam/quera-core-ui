{"version":3,"file":"SearchBox.stories-c379c046.js","sources":["../../node_modules/@chakra-ui/input/dist/chunk-FKYN3ZGE.mjs","../../node_modules/@chakra-ui/input/dist/chunk-2ZHRCML3.mjs","../../node_modules/@chakra-ui/progress/dist/chunk-7CG3L4JY.mjs","../../node_modules/@chakra-ui/progress/dist/chunk-EMKK5VRD.mjs","../../node_modules/@chakra-ui/progress/dist/chunk-Q6Q7I7E5.mjs","../../src/components/ProblemIcon.tsx","../../src/hooks/useDebouncedValue.ts","../../src/components/SearchBox.tsx"],"sourcesContent":["'use client'\n\n// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          // Parts of inputs override z-index to ensure that they stack correctly on each other\n          // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n          isolation: \"isolate\",\n          ...styles.group\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n//# sourceMappingURL=chunk-FKYN3ZGE.mjs.map","'use client'\nimport {\n  useInputGroupStyles\n} from \"./chunk-FKYN3ZGE.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n//# sourceMappingURL=chunk-2ZHRCML3.mjs.map","'use client'\n\n// src/circle.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Circle = (props) => /* @__PURE__ */ jsx(chakra.circle, { cx: 50, cy: 50, r: 42, fill: \"transparent\", ...props });\nCircle.displayName = \"Circle\";\n\nexport {\n  Circle\n};\n//# sourceMappingURL=chunk-7CG3L4JY.mjs.map","'use client'\nimport {\n  rotate\n} from \"./chunk-TXZFUZNG.mjs\";\n\n// src/shape.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Shape = (props) => {\n  const { size, isIndeterminate, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      viewBox: \"0 0 100 100\",\n      __css: {\n        width: size,\n        height: size,\n        animation: isIndeterminate ? `${rotate} 2s linear infinite` : void 0\n      },\n      ...rest\n    }\n  );\n};\nShape.displayName = \"Shape\";\n\nexport {\n  Shape\n};\n//# sourceMappingURL=chunk-EMKK5VRD.mjs.map","'use client'\nimport {\n  Circle\n} from \"./chunk-7CG3L4JY.mjs\";\nimport {\n  Shape\n} from \"./chunk-EMKK5VRD.mjs\";\nimport {\n  getProgressProps,\n  spin\n} from \"./chunk-TXZFUZNG.mjs\";\n\n// src/circular-progress.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CircularProgress = forwardRef(\n  (props, ref) => {\n    var _a;\n    const {\n      size = \"48px\",\n      max = 100,\n      min = 0,\n      valueText,\n      getValueText,\n      value,\n      capIsRound,\n      children,\n      thickness = \"10px\",\n      color = \"#0078d4\",\n      trackColor = \"#edebe9\",\n      isIndeterminate,\n      ...rest\n    } = props;\n    const progress = getProgressProps({\n      min,\n      max,\n      value,\n      valueText,\n      getValueText,\n      isIndeterminate\n    });\n    const determinant = isIndeterminate ? void 0 : ((_a = progress.percent) != null ? _a : 0) * 2.64;\n    const strokeDasharray = determinant == null ? void 0 : `${determinant} ${264 - determinant}`;\n    const indicatorProps = isIndeterminate ? {\n      css: { animation: `${spin} 1.5s linear infinite` }\n    } : {\n      strokeDashoffset: 66,\n      strokeDasharray,\n      transitionProperty: \"stroke-dasharray, stroke\",\n      transitionDuration: \"0.6s\",\n      transitionTimingFunction: \"ease\"\n    };\n    const rootStyles = {\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      fontSize: size\n    };\n    return /* @__PURE__ */ jsxs(\n      chakra.div,\n      {\n        ref,\n        className: \"chakra-progress\",\n        ...progress.bind,\n        ...rest,\n        __css: rootStyles,\n        children: [\n          /* @__PURE__ */ jsxs(Shape, { size, isIndeterminate, children: [\n            /* @__PURE__ */ jsx(\n              Circle,\n              {\n                stroke: trackColor,\n                strokeWidth: thickness,\n                className: \"chakra-progress__track\"\n              }\n            ),\n            /* @__PURE__ */ jsx(\n              Circle,\n              {\n                stroke: color,\n                strokeWidth: thickness,\n                className: \"chakra-progress__indicator\",\n                strokeLinecap: capIsRound ? \"round\" : void 0,\n                opacity: progress.value === 0 && !isIndeterminate ? 0 : void 0,\n                ...indicatorProps\n              }\n            )\n          ] }),\n          children\n        ]\n      }\n    );\n  }\n);\nCircularProgress.displayName = \"CircularProgress\";\n\nexport {\n  CircularProgress\n};\n//# sourceMappingURL=chunk-Q6Q7I7E5.mjs.map","import * as React from \"react\";\nimport { Tooltip, CircularProgress } from \"@chakra-ui/react\";\nimport { persianDigits } from \"../utils/string\";\n\nexport const ProblemIcon = ({ solvedPercent }: { solvedPercent: number }) => {\n  let tooltipLabel;\n\n  switch (solvedPercent) {\n    case 100:\n      tooltipLabel = \"حل کامل\";\n      break;\n    case null:\n      tooltipLabel = \"بدون تلاش\";\n      break;\n    default:\n      tooltipLabel = `حل ناتمام: ٪${persianDigits(solvedPercent)} نمره`;\n      break;\n  }\n  return (\n    <Tooltip label={tooltipLabel}>\n      <span>\n        <CircularProgress\n          value={solvedPercent === null ? 0 : Math.max(solvedPercent, 10)}\n          size={6}\n          color={solvedPercent === 100 ? \"green.400\" : \"brand.400\"}\n          trackColor=\"gray.300\"\n        />\n      </span>\n    </Tooltip>\n  );\n};\n","import * as React from \"react\";\n\n/**\n * This hook allows you to debounce any fast changing value.\n * @param value\n * @param delay\n */\nexport const useDebouncedValue = (value: any, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n};\n","import {\n  Button,\n  Divider,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spinner,\n  VStack,\n  Text,\n  useDisclosure,\n  Card,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { mdiMagnify, mdiClose } from \"@mdi/js\";\nimport { useDebouncedValue } from \"../hooks/useDebouncedValue\";\nimport { MdIcon } from \"./MdIcon\";\nimport { Empty } from \"./Empty\";\n\ninterface SearchBarIconProps {\n  searching: boolean;\n  canClearSearch: boolean;\n  handleClearSearch: () => void;\n}\n\nconst SearchBarIcon = ({ searching, canClearSearch, handleClearSearch }: SearchBarIconProps) => {\n  let icon;\n  if (searching) {\n    icon = <Spinner />;\n  } else if (canClearSearch) {\n    icon = (\n      <MdIcon\n        icon={mdiClose}\n        cursor=\"pointer\"\n        boxSize={6}\n        onClick={() => {\n          handleClearSearch();\n        }}\n      />\n    );\n  } else {\n    icon = <MdIcon icon={mdiMagnify} boxSize={6} />;\n  }\n  return <InputRightElement>{icon}</InputRightElement>;\n};\n\nexport interface SearchBoxProps {\n  searchHandler: (searchTerm: string) => Promise<any[]>;\n  renderResultItem: (any) => React.ReactNode;\n  emptyMessage: string;\n  placeholder: string;\n  value: string;\n  setValue: React.Dispatch<React.SetStateAction<string>>;\n  onShowAllResults: () => void;\n  onClearSearch: () => void;\n  emptyImage: React.ReactNode;\n}\n\nexport const SearchBox = ({\n  searchHandler,\n  renderResultItem,\n  emptyMessage,\n  placeholder,\n  value,\n  setValue,\n  onShowAllResults,\n  onClearSearch,\n  emptyImage,\n}: SearchBoxProps) => {\n  const [loading, setLoading] = React.useState(false);\n  const resultsDisclosure = useDisclosure();\n\n  const debouncedSearchTerm = useDebouncedValue(value, 800);\n  const [searchResults, setSearchResults] = React.useState(null);\n  const containerRef = React.useRef(null);\n\n  const setSearchTerm = (term: string) => {\n    if (term) {\n      setLoading(true);\n      resultsDisclosure.onOpen();\n    }\n    setValue(term);\n  };\n\n  const onClickOutside = (event: Event) => {\n    if (containerRef.current && !containerRef.current.contains(event.target)) {\n      resultsDisclosure.onClose();\n      [\"click\", \"keydown\"].forEach((eventName) => {\n        document.removeEventListener(eventName, onClickOutside);\n      });\n    }\n  };\n\n  const onFocusInput = () => {\n    resultsDisclosure.onOpen();\n    [\"click\", \"keydown\"].forEach((eventName) => {\n      document.addEventListener(eventName, onClickOutside);\n    });\n  };\n\n  const handleShowAllResults = () => {\n    resultsDisclosure.onClose();\n    onShowAllResults();\n  };\n\n  const handleClearSearch = () => {\n    setSearchResults(null);\n    resultsDisclosure.onClose();\n    setValue(\"\");\n    if (setValue) {\n      onClearSearch();\n    }\n  };\n\n  const isInitialMount = React.useRef(true);\n\n  React.useEffect(() => {\n    // Don't do anything on initial mount\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      return;\n    }\n    if (!value && !resultsDisclosure.isOpen) {\n      // Clear search in case of query param removal\n      handleClearSearch();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  React.useEffect(() => {\n    if (debouncedSearchTerm.length === 0) return;\n\n    searchHandler(debouncedSearchTerm).then((d) => {\n      setSearchResults(d);\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchTerm]);\n\n  const isSearching = value.length > 0 && loading;\n  const resultsIsOpen = resultsDisclosure.isOpen && debouncedSearchTerm.length > 0 && !loading;\n  const finalResults = resultsIsOpen && searchResults ? searchResults : [];\n\n  return (\n    <Card ref={containerRef} position=\"relative\" borderRadius=\"xl\" boxShadow=\"unset\">\n      <InputGroup zIndex=\"dropdown\" size=\"lg\">\n        <SearchBarIcon\n          searching={isSearching}\n          canClearSearch={value.length > 0}\n          handleClearSearch={handleClearSearch}\n        />\n        <Input\n          value={value}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && handleShowAllResults()}\n          onFocus={onFocusInput}\n          placeholder={placeholder}\n          fontSize=\"md\"\n          borderBottomLeftRadius={resultsIsOpen ? 0 : undefined}\n          borderBottomRightRadius={resultsIsOpen ? 0 : undefined}\n        />\n      </InputGroup>\n      <Card\n        boxShadow=\"2xl\"\n        display={resultsIsOpen ? \"block\" : \"none\"}\n        position=\"absolute\"\n        w=\"full\"\n        top={0}\n        pt={12}\n        zIndex=\"docked\"\n      >\n        {finalResults.length > 0 ? (\n          <>\n            <Divider />\n            <VStack spacing={0} align=\"stretch\">\n              {finalResults.map((result) => renderResultItem(result))}\n            </VStack>\n            <Divider />\n            {finalResults.length > 0 && (\n              <Button\n                variant=\"ghost\"\n                size=\"lg\"\n                fontWeight=\"normal\"\n                w=\"full\"\n                px={4}\n                h={14}\n                colorScheme=\"gray\"\n                justifyContent=\"start\"\n                borderRadius={0}\n                onClick={handleShowAllResults}\n                textOverflow=\"ellipsis\"\n                overflow=\"hidden\"\n              >\n                نمایش همه نتایج برای جستجوی{\" \"}\n                <Text as=\"strong\" mx={2} color=\"text.brand\">\n                  «{value}»\n                </Text>\n              </Button>\n            )}\n          </>\n        ) : (\n          <Empty size=\"sm\" message={emptyMessage} emptyImage={emptyImage} />\n        )}\n      </Card>\n    </Card>\n  );\n};\n"],"names":["InputGroupStylesProvider","useInputGroupStyles","createContext","InputGroup","forwardRef","props","ref","styles","useMultiStyleConfig","children","className","rest","omitThemingProps","_className","cx","groupStyles","validChildren","getValidChildren","input","child","_a","_b","clones","theming","compact","cloneElement","jsx","chakra","StyledInputElement","InputElement","placement","elementStyles","InputLeftElement","InputRightElement","Circle","Shape","size","isIndeterminate","rotate","CircularProgress","max","min","valueText","getValueText","value","capIsRound","thickness","color","trackColor","progress","getProgressProps","determinant","strokeDasharray","indicatorProps","spin","rootStyles","jsxs","ProblemIcon","solvedPercent","tooltipLabel","persianDigits","Tooltip","useDebouncedValue","delay","debouncedValue","setDebouncedValue","React.useState","React.useEffect","handler","SearchBarIcon","searching","canClearSearch","handleClearSearch","icon","Spinner","MdIcon","mdiClose","mdiMagnify","SearchBox","searchHandler","renderResultItem","emptyMessage","placeholder","setValue","onShowAllResults","onClearSearch","emptyImage","loading","setLoading","resultsDisclosure","useDisclosure","debouncedSearchTerm","searchResults","setSearchResults","containerRef","React.useRef","setSearchTerm","term","onClickOutside","event","eventName","onFocusInput","handleShowAllResults","isInitialMount","d","isSearching","resultsIsOpen","finalResults","Card","Input","e","Fragment","Divider","VStack","result","Button","Text","Empty"],"mappings":"6iDAeA,GAAI,CAACA,GAA0BC,EAAmB,EAAIC,GAAc,CAClE,KAAM,0BACN,aAAc,2GAChB,CAAC,EACGC,EAAaC,EACf,SAAqBC,EAAOC,EAAK,CAC/B,MAAMC,EAASC,GAAoB,QAASH,CAAK,EAC3C,CAAE,SAAAI,EAAU,UAAAC,EAAW,GAAGC,CAAI,EAAKC,EAAiBP,CAAK,EACzDQ,EAAaC,EAAG,sBAAuBJ,CAAS,EAChDK,EAAc,CAAA,EACdC,EAAgBC,GAAiBR,CAAQ,EACzCS,EAAQX,EAAO,MACrBS,EAAc,QAASG,GAAU,CAC/B,IAAIC,EAAIC,EACHd,IAEDW,GAASC,EAAM,KAAK,KAAO,qBAC7BJ,EAAY,cAAgBK,EAAKF,EAAM,SAAW,KAAOE,EAAKF,EAAM,GAElEA,GAASC,EAAM,KAAK,KAAO,sBAC7BJ,EAAY,YAAcM,EAAKH,EAAM,SAAW,KAAOG,EAAKH,EAAM,GAEhEC,EAAM,KAAK,KAAO,oBACpBJ,EAAY,gBAAkB,GAE5BI,EAAM,KAAK,KAAO,mBACpBJ,EAAY,kBAAoB,GAExC,CAAK,EACD,MAAMO,EAASN,EAAc,IAAKG,GAAU,CAC1C,IAAIC,EAAIC,EACR,MAAME,EAAUC,GAAQ,CACtB,OAAQJ,EAAKD,EAAM,QAAU,KAAO,OAASC,EAAG,OAASf,EAAM,KAC/D,UAAWgB,EAAKF,EAAM,QAAU,KAAO,OAASE,EAAG,UAAYhB,EAAM,OAC7E,CAAO,EACD,OAAOc,EAAM,KAAK,KAAO,QAAUM,EAAY,aAACN,EAAOI,CAAO,EAAIE,EAAY,aAACN,EAAO,OAAO,OAAOI,EAASR,EAAaI,EAAM,KAAK,CAAC,CAC5I,CAAK,EACD,OAAuBO,EACrBC,EAAO,IACP,CACE,UAAWd,EACX,IAAAP,EACA,MAAO,CACL,MAAO,OACP,QAAS,OACT,SAAU,WAGV,UAAW,UACX,GAAGC,EAAO,KACX,EACD,aAAc,GACd,GAAGI,EACH,SAA0Be,EAAI1B,GAA0B,CAAE,MAAOO,EAAQ,SAAUe,EAAQ,CAC5F,CACP,CACG,CACH,EACAnB,EAAW,YAAc,aC7DzB,IAAIyB,GAAqBD,EAAO,MAAO,CACrC,UAAW,CACT,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,SAAU,WACV,IAAK,IACL,OAAQ,CACT,CACH,CAAC,EACGE,EAAezB,EAAW,SAAuBC,EAAOC,EAAK,CAC/D,IAAIc,EAAIC,EACR,KAAM,CAAE,UAAAS,EAAY,OAAQ,GAAGnB,CAAI,EAAKN,EAClCE,EAASN,KACTiB,EAAQX,EAAO,MAEfwB,EAAgB,CACpB,CAFWD,IAAc,OAAS,aAAe,UAE5C,EAAG,IACR,OAAQV,EAAKF,GAAS,KAAO,OAASA,EAAM,SAAW,KAAOE,EAAKF,GAAS,KAAO,OAASA,EAAM,EAClG,QAASG,EAAKH,GAAS,KAAO,OAASA,EAAM,SAAW,KAAOG,EAAKH,GAAS,KAAO,OAASA,EAAM,EACnG,SAAUA,GAAS,KAAO,OAASA,EAAM,SACzC,GAAGX,EAAO,OACd,EACE,OAAuBmB,EAAIE,GAAoB,CAAE,IAAAtB,EAAK,MAAOyB,EAAe,GAAGpB,CAAI,CAAE,CACvF,CAAC,EACDkB,EAAa,GAAK,eAClBA,EAAa,YAAc,eAC3B,IAAIG,EAAmB5B,EACrB,SAA2BC,EAAOC,EAAK,CACrC,KAAM,CAAE,UAAAI,EAAW,GAAGC,CAAI,EAAKN,EACzBQ,EAAaC,EAAG,6BAA8BJ,CAAS,EAC7D,OAAuBgB,EACrBG,EACA,CACE,IAAAvB,EACA,UAAW,OACX,UAAWO,EACX,GAAGF,CACJ,CACP,CACG,CACH,EACAqB,EAAiB,GAAK,mBACtBA,EAAiB,YAAc,mBAC/B,IAAIC,EAAoB7B,EACtB,SAA4BC,EAAOC,EAAK,CACtC,KAAM,CAAE,UAAAI,EAAW,GAAGC,CAAI,EAAKN,EACzBQ,EAAaC,EAAG,8BAA+BJ,CAAS,EAC9D,OAAuBgB,EACrBG,EACA,CACE,IAAAvB,EACA,UAAW,QACX,UAAWO,EACX,GAAGF,CACJ,CACP,CACG,CACH,EACAsB,EAAkB,GAAK,oBACvBA,EAAkB,YAAc,oBCnEhC,IAAIC,EAAU7B,GAA0BqB,EAAIC,EAAO,OAAQ,CAAE,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,KAAM,cAAe,GAAGtB,CAAK,CAAE,EACnH6B,EAAO,YAAc,SCErB,IAAIC,EAAS9B,GAAU,CACrB,KAAM,CAAE,KAAA+B,EAAM,gBAAAC,EAAiB,GAAG1B,CAAI,EAAKN,EAC3C,OAAuBqB,EACrBC,EAAO,IACP,CACE,QAAS,cACT,MAAO,CACL,MAAOS,EACP,OAAQA,EACR,UAAWC,EAAkB,GAAGC,EAAM,sBAAwB,MAC/D,EACD,GAAG3B,CACJ,CACL,CACA,EACAwB,EAAM,YAAc,QCLpB,IAAII,EAAmBnC,EACrB,CAACC,EAAOC,IAAQ,CACd,IAAIc,EACJ,KAAM,CACJ,KAAAgB,EAAO,OACP,IAAAI,EAAM,IACN,IAAAC,EAAM,EACN,UAAAC,EACA,aAAAC,EACA,MAAAC,EACA,WAAAC,EACA,SAAApC,EACA,UAAAqC,EAAY,OACZ,MAAAC,EAAQ,UACR,WAAAC,EAAa,UACb,gBAAAX,EACA,GAAG1B,CACJ,EAAGN,EACE4C,EAAWC,GAAiB,CAChC,IAAAT,EACA,IAAAD,EACA,MAAAI,EACA,UAAAF,EACA,aAAAC,EACA,gBAAAN,CACN,CAAK,EACKc,EAAcd,EAAkB,SAAWjB,EAAK6B,EAAS,UAAY,KAAO7B,EAAK,GAAK,KACtFgC,EAAkBD,GAAe,KAAO,OAAS,GAAGA,CAAW,IAAI,IAAMA,CAAW,GACpFE,EAAiBhB,EAAkB,CACvC,IAAK,CAAE,UAAW,GAAGiB,EAAI,uBAAyB,CACxD,EAAQ,CACF,iBAAkB,GAClB,gBAAAF,EACA,mBAAoB,2BACpB,mBAAoB,OACpB,yBAA0B,MAChC,EACUG,EAAa,CACjB,QAAS,eACT,SAAU,WACV,cAAe,SACf,SAAUnB,CAChB,EACI,OAAuBoB,EACrB7B,EAAO,IACP,CACE,IAAArB,EACA,UAAW,kBACX,GAAG2C,EAAS,KACZ,GAAGtC,EACH,MAAO4C,EACP,SAAU,CACQC,EAAKrB,EAAO,CAAE,KAAAC,EAAM,gBAAAC,EAAiB,SAAU,CAC7CX,EACdQ,EACA,CACE,OAAQc,EACR,YAAaF,EACb,UAAW,wBACZ,CACF,EACepB,EACdQ,EACA,CACE,OAAQa,EACR,YAAaD,EACb,UAAW,6BACX,cAAeD,EAAa,QAAU,OACtC,QAASI,EAAS,QAAU,GAAK,CAACZ,EAAkB,EAAI,OACxD,GAAGgB,CACJ,CACF,CACb,EAAa,EACH5C,CACD,CACF,CACP,CACG,CACH,EACA8B,EAAiB,YAAc,mBC7FxB,MAAAkB,EAAA,CAAA,CAAA,cAAAC,KAAA,CACL,IAAAC,EAEA,OAAAD,EAAA,CAAuB,IAAA,KAEnBC,EAAA,UACA,MAAA,KAAA,KAEAA,EAAA,YACA,MAAA,QAEAA,EAAA,eAAAC,EAAAF,CAAA,CAAA,QACA,KAAA,CAEJ,OAAAhC,EAAAmC,GAAA,CAAA,MAAAF,EAAA,SAAAjC,EAAA,OAAA,CAAA,SAAAA,EAGMa,EAAC,CAAA,MAAAmB,IAAA,KAAA,EAAA,KAAA,IAAAA,EAAA,EAAA,EAC+D,KAAA,EACxD,MAAAA,IAAA,IAAA,YAAA,YACuC,WAAA,UAClC,CAAA,CAAA,CAAA,CAAA,CAAA,CAKrB,kNCvBa,MAAAI,GAAoB,CAAClB,EAAYmB,IAAkB,CAE9D,KAAM,CAACC,EAAgBC,CAAiB,EAAIC,WAAetB,CAAK,EAChEuB,OAAAA,EAAAA,UAAgB,IAAM,CACd,MAAAC,EAAU,WAAW,IAAM,CAC/BH,EAAkBrB,CAAK,GACtBmB,CAAK,EACR,MAAO,IAAM,CACX,aAAaK,CAAO,CAAA,CACtB,EACC,CAACxB,EAAOmB,CAAK,CAAC,EACVC,CACT,ECKAK,GAAA,CAAA,CAAA,UAAAC,EAAA,eAAAC,EAAA,kBAAAC,CAAA,IAAA,CACE,IAAAC,EACA,OAAAH,EACEG,EAAA/C,EAAAgD,GAAA,CAAA,CAAA,EAAgBH,EAEhBE,EAAA/C,EACEiD,EAAC,CAAA,KAAAC,GACO,OAAA,UACC,QAAA,EACE,QAAA,IAAA,CAEPJ,GAAkB,CACpB,CAAA,EAIJC,EAAA/C,EAAAiD,EAAA,CAAA,KAAAE,GAAA,QAAA,CAAA,CAAA,EAEFnD,EAAAO,EAAA,CAAA,SAAAwC,CAAA,CAAA,CACF,EAcOK,EAAA,CAAA,CAAmB,cAAAC,EACxB,iBAAAC,EACA,aAAAC,EACA,YAAAC,EACA,MAAAtC,EACA,SAAAuC,EACA,iBAAAC,EACA,cAAAC,EACA,WAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAtB,EAAA,SAAA,EAAA,EACAuB,EAAAC,KAEAC,EAAA7B,GAAAlB,EAAA,GAAA,EACA,CAAAgD,EAAAC,CAAA,EAAA3B,EAAA,SAAA,IAAA,EACA4B,EAAAC,SAAA,IAAA,EAEAC,EAAAC,GAAA,CACEA,IACET,EAAA,EAAA,EACAC,EAAA,OAAA,GAEFN,EAAAc,CAAA,CAAa,EAGfC,EAAAC,GAAA,CACEL,EAAA,SAAA,CAAAA,EAAA,QAAA,SAAAK,EAAA,MAAA,IACEV,EAAA,QAAA,EACA,CAAA,QAAA,SAAA,EAAA,QAAAW,GAAA,CACE,SAAA,oBAAAA,EAAAF,CAAA,CAAsD,CAAA,EAE1D,EAGFG,EAAA,IAAA,CACEZ,EAAA,OAAA,EACA,CAAA,QAAA,SAAA,EAAA,QAAAW,GAAA,CACE,SAAA,iBAAAA,EAAAF,CAAA,CAAmD,CAAA,CACpD,EAGHI,EAAA,IAAA,CACEb,EAAA,QAAA,EACAL,GAAiB,EAGnBZ,EAAA,IAAA,CACEqB,EAAA,IAAA,EACAJ,EAAA,QAAA,EACAN,EAAA,EAAA,EACAA,GACEE,GACF,EAGFkB,EAAAR,SAAA,EAAA,EAEA5B,EAAAA,UAAA,IAAA,CAEE,GAAAoC,EAAA,QAAA,CACEA,EAAA,QAAA,GACA,MAAA,CAEF,CAAA3D,GAAA,CAAA6C,EAAA,QAEEjB,GACF,EAAA,CAAA5B,CAAA,CAAA,EAIFuB,EAAAA,UAAA,IAAA,CACEwB,EAAA,SAAA,GAEAZ,EAAAY,CAAA,EAAA,KAAAa,GAAA,CACEX,EAAAW,CAAA,EACAhB,EAAA,EAAA,CAAgB,CAAA,CACjB,EAAA,CAAAG,CAAA,CAAA,EAIH,MAAAc,EAAA7D,EAAA,OAAA,GAAA2C,EACAmB,EAAAjB,EAAA,QAAAE,EAAA,OAAA,GAAA,CAAAJ,EACAoB,EAAAD,GAAAd,EAAAA,EAAA,CAAA,EAEA,OAAApC,EAAAoD,EAAA,CAAA,IAAAd,EAAA,SAAA,WAAA,aAAA,KAAA,UAAA,QAAA,SAAA,CAEItC,EAAArD,EAAA,CAAA,OAAA,WAAA,KAAA,KAAA,SAAA,CACEuB,EAAA2C,GAAC,CAAA,UAAAoC,EACY,eAAA7D,EAAA,OAAA,EACoB,kBAAA4B,CAC/B,CAAA,EACF9C,EACAmF,GAAC,CAAA,MAAAjE,EACC,SAAAkE,GAAAd,EAAAc,EAAA,OAAA,KAAA,EAC6C,UAAAA,GAAAA,EAAA,MAAA,SAAAR,EAAA,EACe,QAAAD,EACnD,YAAAnB,EACT,SAAA,KACS,uBAAAwB,EAAA,EAAA,OACmC,wBAAAA,EAAA,EAAA,MACC,CAAA,CAC/C,EAAA,EACFhF,EACAkF,EAAC,CAAA,UAAA,MACW,QAAAF,EAAA,QAAA,OACyB,SAAA,WAC1B,EAAA,OACP,IAAA,EACG,GAAA,GACD,OAAA,SACG,SAAAC,EAAA,OAAA,EAAAnD,EAAAuD,EAAA,CAAA,SAAA,CAIHrF,EAAAsF,EAAA,EAAA,EAAStF,EAAAuF,GAAA,CAAA,QAAA,EAAA,MAAA,UAAA,SAAAN,EAAA,IAAAO,GAAAlC,EAAAkC,CAAA,CAAA,CAAA,CAAA,EAGTxF,EAAAsF,EAAA,EAAA,EACSL,EAAA,OAAA,GAAAnD,EAEP2D,EAAC,CAAA,QAAA,QACS,KAAA,KACH,WAAA,SACM,EAAA,OACT,GAAA,EACE,EAAA,GACD,YAAA,OACS,eAAA,QACG,aAAA,EACD,QAAAb,EACL,aAAA,WACI,SAAA,SACJ,SAAA,CACV,8BAAA,IAC6B9C,EAAA4D,EAAA,CAAA,GAAA,SAAA,GAAA,EAAA,MAAA,aAAA,SAAA,CACgB,IAAAxE,EACxC,GAAM,EAAA,CACV,CAAA,CAAA,CACF,EAAA,EAAAlB,EAAA2F,GAAA,CAAA,KAAA,KAAA,QAAApC,EAAA,WAAAK,EAAA,CAI4D,CAAA,CAEpE,CAAA,CAAA,CAGN;;;;;;;;;;","x_google_ignoreList":[0,1,2,3,4]}