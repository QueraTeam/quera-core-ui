{"version":3,"file":"chunk-XRMX4GAI-92ddb344.js","sources":["../../node_modules/@chakra-ui/form-control/dist/chunk-R42ZB7PB.mjs","../../node_modules/@chakra-ui/form-control/dist/chunk-XRMX4GAI.mjs"],"sourcesContent":["'use client'\n\n// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n//# sourceMappingURL=chunk-R42ZB7PB.mjs.map","'use client'\nimport {\n  useFormControlContext\n} from \"./chunk-R42ZB7PB.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n//# sourceMappingURL=chunk-XRMX4GAI.mjs.map"],"names":["FormControlStylesProvider","useFormControlStyles","createContext","FormControlProvider","useFormControlContext","useFormControlProvider","props","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","id","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","useState","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","getErrorMessageProps","getRootProps","getRequiredIndicatorProps","FormControl","forwardRef","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","_","context","className","cx","jsx","chakra","FormHelperText","field","useFormControl","rest","useFormControlProps","ariaAttr","_a","_b","_c","disabled","readOnly","required","onFocus","onBlur","labelIds","callAllHandlers"],"mappings":"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","x_google_ignoreList":[0,1]}